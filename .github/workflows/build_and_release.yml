jobs:
  build_j2v8_android:
    name: Android
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v1
    - continue-on-error: true
      name: Download monolithic libraries and extract to v8.out
      run: 'curl -k -O http://download.eclipsesource.com/j2v8/v8/libv8_9.3.345.11_monolith.zip

        mkdir -p v8.out

        unzip libv8_9.3.345.11_monolith.zip -d v8.out

        '
    - continue-on-error: true
      name: Start J2V8 build
      run: 'python2 build.py -t android -a x86 --docker --keep-native-libs j2v8cmake
        j2v8jni j2v8cpp j2v8optimize j2v8java

        python2 build.py -t android -a arm --docker --keep-native-libs j2v8cmake j2v8jni
        j2v8cpp j2v8optimize j2v8java

        python2 build.py -t android -a x86_64 --docker --keep-native-libs j2v8cmake
        j2v8jni j2v8cpp j2v8optimize j2v8java

        python2 build.py -t android -a arm64 --docker --keep-native-libs j2v8cmake
        j2v8jni j2v8cpp j2v8optimize j2v8java

        '
    - continue-on-error: true
      env:
        KEYSTORE: ${{ secrets.KEYSTORE }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ID: ${{ secrets.KEY_ID }}
        MAVEN_REPO_PASS: ${{ secrets.MAVEN_REPO_PASS }}
        MAVEN_REPO_USER: ${{ secrets.MAVEN_REPO_USER }}
      name: Release J2V8
      run: python2 build.py -t android -a arm64 j2v8release --keep-native-libs --docker
    - continue-on-error: true
      name: Archive J2V8 Android aar
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-android-aar
        path: build/outputs/aar/j2v8-release.aar
name: Build and release J2V8
on:
  repository_dispatch:
    types: trigger-ga___build_and_release.yml
